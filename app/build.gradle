apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion

  defaultConfig {
    applicationId rootProject.ext.androidApplicationId
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidMinSdkVersion
    versionCode rootProject.ext.androidVersionCode
    versionName rootProject.ext.androidVersionName
  }

  repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    debug.java.srcDirs += 'src/debug/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
  }
}

kapt {
  generateStubs = true
}

dependencies {
  def dependencies = rootProject.ext.dependencies
  def debugDependencies = rootProject.ext.debugDependencies
  def releaseDependencies = rootProject.ext.releaseDependencies

  kapt dependencies.daggerCompiler
  kapt dependencies.lightCycleCompiler
  provided dependencies.javaxAnnotation

  testCompile 'junit:junit:4.12'

  //Library
  compile dependencies.dagger
  compile dependencies.lightCycle
  compile dependencies.rxJava
  compile dependencies.rxAndroid
  compile dependencies.glide
  compile dependencies.timber
  compile dependencies.kotlin
  compile dependencies.retrofit
  compile dependencies.retrofitRx
  compile dependencies.jackson
  compile dependencies.jacksonConverter
  compile dependencies.facebookSdk
  compile(dependencies.crashlytics) {
    transitive = true;
  }

  //Google supports dependencies
  compile dependencies.androidAppcompat
  compile dependencies.androidSupport
  compile dependencies.androidDesign
  compile dependencies.androidAnnotations
  compile dependencies.recyclerView

  //Dependency needed only on debug
  debugCompile debugDependencies.leakCanaryDebug
  debugCompile debugDependencies.stethoDebug
  debugCompile debugDependencies.stethoInterceptor
  debugCompile debugDependencies.okHttpLoggingInterceptor

  //Dependency needed only on release
  releaseCompile releaseDependencies.leakCanaryRelease
}
